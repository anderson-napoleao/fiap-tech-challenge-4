services:
  cliente-service:
    build:
      context: ./cliente-service
      dockerfile: Dockerfile
    container_name: cliente_service
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - projetos-fiap-2025

  estoque-service:
    build:
      context: ./estoque-service
    container_name: estoque-service
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - projetos-fiap-2025

  pagamento-service:
    build:
      context: ./pagamento-service
    container_name: pagamento-service
    restart: always
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - projetos-fiap-2025

  pedido-receiver-service:
    build:
      context: ./pedido-receiver-service
    container_name: pedido-receiver-service
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - projetos-fiap-2025

  pedido-service:
    build:
      context: ./pedido-service
      dockerfile: Dockerfile
    container_name: pedido_service
    restart: always
    ports:
      - "8086:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - projetos-fiap-2025

  produto-service:
    build:
      context: ./produto-service
    container_name: produto-service
    restart: always
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - projetos-fiap-2025

  postgres:
    image: "postgres:14"
    container_name: "postgres"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - projetos-fiap-2025

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - projetos-fiap-2025

  kafka:
    build:
      context: .
      dockerfile: Dockerfile.kafka
    container_name: kafka
    restart: always
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "consultas-agendadas:1:1"
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    networks:
      - projetos-fiap-2025

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - postgres
    ports:
      - "8181:8080"
    networks:
      - projetos-fiap-2025

networks:
  projetos-fiap-2025:

volumes:
  postgres_data: